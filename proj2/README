/*********************************************************
 * Comp 15 Project 2: grep
 * 
 * 
 * Author: Matias Korman
 * Modified by: Jun Sung Tak
 *
 *********************************************************/

FSTree.h		: interface of FSTree class  (used to explore file directories)
FSTree.o		: compiled version of FSTree.cpp
DirNode.h 		: interface of DirNode class (nodes used in FSTree)
DirNode.o 		: compiled version of DirNode.cpp
hashExample.cpp : an example on how to use the hash function (and compression) with STL library
the_gerp		: compiled solution of this assignment (good for comparing purposes)
README 			: this file
DyArr.cpp		: implementation of DyArr class (Hash table class)
DyArr.h 		: interface of DyArr class
gerp.cpp		: Driver file for gerp
HashLinkList.cpp: Implemntation of LinkedList class for the hash table
HashLinkList.h  : Interface of HashLinkList class
Makefile:	    : Compile with this
Node.h 			: Struct file containing the node for LinkedList
Query.cpp		: Implementation of the Query class
Query.h 		: Interface of the Query class
testinput.txt 	: Input for testing gerp
unit-test 		: File with additional tests for functionality

For phase 1 submission:

StringProcessing.cpp: Program with a function that strips the leading and 
					  ending non alpha/digit letter and prints out the 
					  rest.

FSTreeTraversal.cpp : Program that prints all the subdirectory and files 
					  with its path from the given directory which is 
					  given on the command line. 

For phase 2 submission:
	Data structure: My hashtable is a dynamic array where every index is a
	individual linked list. Inside the linked list, it contains nodes (in
	Node.h). Inside the node there are 3 vectors and one pointer to another
	node, *next. 

	Program Purpose: This program reads all the text files in a given 
	directory and annotates all words and its locaction so that the user
	is able to query for different words, both case sensitive and 
	insensitive. 
